name: Maven Pipeline

on:
  push:
    branches: ["master"]
    
  pull_request:
    branches: ["master"]

jobs:
  # Stage 1: Setup CI Environment
  setup-ci: 
    name: Setup CI Pipeline
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up Java JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

  # Stage 2: Build and Modify Version
  build-with-maven:
    name: Run Maven Build and Update Version
    runs-on: ubuntu-latest
    needs: setup-ci # Depends on setup-ci job

    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Cache Maven dependencies
      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # Run Maven build
      - name: Build with Maven
        run: mvn clean install

      # Check Maven project version and update it if it's a SNAPSHOT version
      - name: Update Version if Snapshot
        run: |
          sed -i '/<name>swagger-petstore<\/name>/{n;s|<version>.*</version>|<version>${{ github.event.inputs.buildVersion }}</version>|}' pom.xml    


      # Commit and push changes back to the repository, only if it's a push event
      - name: Configure Git and Push Changes
        if: github.event_name == 'push'  # Only commit and push if it's triggered by a push event
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "Updated version in pom.xml to release version"
          git push origin master:${{ github.ref }}
        env:
          TOKEN: ${{ secrets.TOKEN }}